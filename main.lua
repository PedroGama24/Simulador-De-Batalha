--[[
==========================================
Voc√™ empunha sua espada e se prepara para lutar.
√â hora de batalhar!

|   Prismarine Colossus
|
|   Enormes est√°tuas de prismarina se erguem diante de voc√™. Sua aparencia ame√ßadora pode assutar at√© os mais bravos guerreiros.
|   Eles t√™m olhos turquesa brillhantes, mas um elogio n√£o vai te ajudar a sobreviver. 
|
|
|   Atributos:
|   Vida       ‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
|   Ataque     ‚ñ∞‚ñ∞‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±
|   Defesa     ‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞  
|   Agilidade  ‚ñ∞‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±‚ñ±
|
|   
|
|   Oque voc√™ deseja fazer?
|   1. Atacar com a espada.
|   2. Usar po√ß√£o de regenera√ß√£o.
|   3. Atirar uma pedra.
|   4. Se esconder.
    >
]]

-- Depend√™ncias
local utils = require("utils")
local player = require("player.player")
local playerActions = require("player.actions")
local colossus = require("colossus.colossus")
local colossusActions = require("colossus.actions")

-- Habilite o UTF-8
utils.enableUtf8()

--Header
utils.printHeader()

-- Obter defini√ß√£o do jogador

-- Obter defini√ß√£o do mosntro
local boss = colossus
local bossActions = colossusActions

-- Apresentar o monstro
utils.printCreature(boss)

-- Build the player
playerActions.build()
bossActions.build()

-- Come√ßar o loop de batalha
while true do
    -- Mostrar a√ß√µes dispon√≠veis
    print()
    print(string.format("Qual ser√° a pr√≥xima a√ß√£o de %s?", player.name))
    local validPlayerActions = playerActions.getValidActions(player, boss)
    for i, actions in pairs(validPlayerActions) do
        print(string.format("%d. %s", i, actions.description))
    end
    local chosenIndex = utils.ask()
    local chosenAction = validPlayerActions[chosenIndex]
    local isActionValid = chosenAction ~= nil

    -- Simular o turno do jogador
    if isActionValid then
        chosenAction.execute(player, boss)
    else
        print(string.format("Sua a√ß√£o nao e valida. %s perdeu a vez.", player.name))
    end

    --Ponto de saida: Criatura ficou sem vida
    if boss.health <= 0 then
        break
    end

    -- Simular o turno da criatura
    print()
    local validBossActions = bossActions.getValidActions(player, boss)
    local bossAction = validBossActions[math.random(#validBossActions)]
    bossAction.execute(player, boss)

    -- Ponto de saida: Jogador morreu
    if player.health <= 0 then
        break    
    end
end

-- Processar condi√ß√£o de Vitoria e Derrota
    if player.health <= 0 then
        print()
        print("----------------------------------------------------")
        print()
        print("üíÄüíÄ")
        print(string.format("%s foi derrotado por %s.",player.name, boss.name))
        print("Quem sabe na pr√≥xima vez voc√™ ser√° mais forte.")
        print()
    elseif boss.health <= 0 then
        print()
        print("----------------------------------------------------")
        print()
        print("üéâüéâ")
        print(string.format("%s prevaleceu e venceu o %s",player.name, boss.name))
        print("Voc√™ √© um verdadeiro her√≥i!")
        print()

    end